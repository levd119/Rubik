/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testjogl;

import com.jogamp.opengl.GLException;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author lev&Rotem
 */
public class FinishGameDialog extends javax.swing.JDialog {

    /**
     * Creates new form FinishGameDialog
     */
    Score score;

    public FinishGameDialog(java.awt.Frame parent, boolean modal, Score score) {
        super(parent, modal);
        this.score = score;

        initComponents();

        this.getRootPane().setOpaque(false);
        this.getContentPane().setBackground(new Color(0, 0, 0, 0));
        this.setBackground(new Color(0, 0, 0, 0));
        Toolkit toolkit = Toolkit.getDefaultToolkit();
        Dimension d = toolkit.getScreenSize();
        int x = (d.width - this.getWidth()) / 2;
        int y = (d.height - this.getHeight()) / 2;
        this.setLocation(x, y);

        userNameTextPane.setBackground(new Color(0, 0, 0, 0));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userNameTextPane = new javax.swing.JTextField();
        enterNameBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(420, 400));
        setMinimumSize(new java.awt.Dimension(420, 400));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(420, 400));
        getContentPane().setLayout(null);

        userNameTextPane.setBorder(null);
        userNameTextPane.setOpaque(false);
        userNameTextPane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTextPaneActionPerformed(evt);
            }
        });
        getContentPane().add(userNameTextPane);
        userNameTextPane.setBounds(110, 190, 180, 30);

        enterNameBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GamePics/okYouWon.png"))); // NOI18N
        enterNameBtn.setBorderPainted(false);
        enterNameBtn.setContentAreaFilled(false);
        enterNameBtn.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/GamePics/okYouWonP.png"))); // NOI18N
        enterNameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterNameBtnActionPerformed(evt);
            }
        });
        getContentPane().add(enterNameBtn);
        enterNameBtn.setBounds(160, 230, 90, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GamePics/Congrats.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(410, 330));
        jLabel1.setMinimumSize(new java.awt.Dimension(410, 330));
        jLabel1.setName(""); // NOI18N
        jLabel1.setPreferredSize(new java.awt.Dimension(410, 330));
        jLabel1.setRequestFocusEnabled(false);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -10, 410, 330);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterNameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterNameBtnActionPerformed
        // TODO add your handling code here:

        ConnectionUtil cu = new ConnectionUtil();
        if (userNameTextPane.getText().isEmpty()) {

            JOptionPane.showMessageDialog(this,
                    "Enter user name");

        } else {
            try {

                ConnectionUtil.openConnectionScore();
                ConnectionData cd = new ConnectionData();
                cd.setRequestCode(ConnectionData.ADD_USER);

                User user = new User(userNameTextPane.getText(), score.getDate(), score.getMoves(), score.getHints());
                score = null;
                cd.setNewUser(user);
                ConnectionUtil.addUser(user);
                ConnectionUtil.closeConnection();
            } catch (IOException ex) {
                saveToFile();

            }
                this.dispose();

        }
//            new MainScreen().setVisible(true);
//            ((CubeFrame) getParent()).dispose();

    }//GEN-LAST:event_enterNameBtnActionPerformed

    private void userNameTextPaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTextPaneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameTextPaneActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton enterNameBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField userNameTextPane;
    // End of variables declaration//GEN-END:variables

    private void saveToFile() {
        GregorianCalendar time = score.getDate();
        File file = new File("C:/Users/USER/Documents/NetBeansProjects/TestJOGL90/src/testjogl/score.txt");
        
        if(!file.exists())
        {
            try {
                file.createNewFile();
            } catch (IOException ex) {
                System.out.println("file not created");            }
        }
        try {
            PrintStream ps = new PrintStream(new FileOutputStream(file, true));
            ps.println(userNameTextPane.getText());
            ps.println(convertTime(time));
            ps.println(score.getMoves());
            ps.println(score.getHints());
            ps.close();
        } catch (FileNotFoundException ex) {
            System.out.println("file not found");
        }

    }

    String convertTime(GregorianCalendar t) {
        String time;
        time = t.getTime().getHours() + ":" + t.getTime().getMinutes() + ":" + t.getTime().getSeconds();
        return time;
    }
}
